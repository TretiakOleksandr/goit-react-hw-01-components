{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/TransactionsHistory/TransactionsHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionsHistory/TransactionsHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","UserProfile","name","tag","location","avatar","followers","views","likes","className","s","profile","src","alt","stats","Statistics","title","statList","map","item","label","percentage","id","FriendListItem","isOnline","userItem","status","style","backgroundColor","width","propTypes","friends","PropTypes","array","FriendList","friendList","TransactionHistory","items","transactionHistory","i","type","amount","currency","App","user","statData","friendsData","transactionsData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c8b6a05.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Profile_avatar__2ATK0\",\"stats\":\"Profile_stats__JHiWM\",\"profile\":\"Profile_profile__1LEku\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statistics_statList__1vStZ\",\"item\":\"Statistics_item__2vCn0\",\"title\":\"Statistics_title__2_I-H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItem\":\"FriendListItem_userItem__2c3kL\",\"status\":\"FriendListItem_status__13mz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__13lKM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionsHistory_transactionHistory__f_cA4\"};","import PropTypes from \"prop-types\";\nimport s from '../Profile/Profile.module.css';\n\nfunction UserProfile({ name, tag, location, avatar, followers, views, likes }) {\n  return (\n    <div className={s.profile}>\n      <div className=\"description\">\n        <img src={avatar} alt={name} className={s.avatar} />\n        <p className=\"name\">{name}</p>\n        <p className=\"tag\">@{tag}</p>\n        <p className=\"location\">{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li>\n          <span className=\"label\">Followers</span>\n          <span className=\"quantity\">{followers}</span>\n        </li>\n        <li>\n          <span className=\"label\">Views</span>\n          <span className=\"quantity\">{views}</span>\n        </li>\n        <li>\n          <span className=\"label\">Likes</span>\n          <span className=\"quantity\">{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nUserProfile.propTypes = {\n  name: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  followers: PropTypes.number,\n  views: PropTypes.number,\n  likes: PropTypes.number,\n};\n\nexport default UserProfile;\n","import PropTypes from \"prop-types\";\r\nimport s from '../Statistics/Statistics.module.css';\r\n\r\nfunction Statistics({ title, stats }) {\r\n\r\n    return (\r\n    <section className=\"statistics\">\r\n            {title && <h2 className={s.title}>{title}</h2>}\r\n\r\n            <ul className={s.statList}>\r\n                {stats.map(item => (\r\n                    <li className={s.item} key={item.id}>\r\n                        <span className=\"label\">{item.label}</span>\r\n                        <span className=\"percentage\">{item.percentage}</span>\r\n                    </li>\r\n                ))}\r\n\r\n            </ul>\r\n    </section>\r\n    );\r\n}\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Statistics;","import s from '../FriendListItem/FriendListItem.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction FriendListItem({ name, avatar, isOnline }) {\r\n    return (\r\n        <li className={s.userItem}>\r\n            <span className={s.status} style={{ backgroundColor: isOnline ? 'green' : 'red'}}></span>\r\n            <img className=\"avatar\" src={avatar} alt=\"\" width=\"48\" />\r\n            <p className={s.name}>{name}</p>\r\n        </li>\r\n    );\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    name: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    isOnline: PropTypes.bool,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import s from '../FriendList/FriendList.module.css';\r\nimport PropTypes from \"prop-types\";\r\nimport FriendListItem from \"../FriendListItem/FriendListItem\";\r\n\r\nfunction FriendList({friends}) {\r\n    return (\r\n        <div>\r\n            <h2>Friends</h2>\r\n            <ul className={s.friendList}>\r\n                {friends.map(item => (\r\n                    <FriendListItem\r\n                        key={item.id}\r\n                        name={item.name}\r\n                        avatar={item.avatar}\r\n                        isOnline={item.isOnline}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    friends: PropTypes.array,\r\n};\r\n\r\nexport default FriendList;","import PropTypes from \"prop-types\";\r\nimport s from \"../TransactionsHistory/TransactionsHistory.module.css\";\r\n\r\nfunction TransactionHistory({items}) {\r\n    return (\r\n        <div>\r\n            <h2>Transaction history</h2>\r\n            <table className={s.transactionHistory}>\r\n            <thead>\r\n                <tr>\r\n                <th>Type</th>\r\n                <th>Amount</th>\r\n                <th>Currency</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                    {items.map(i => (\r\n                        <tr key={i.id}>\r\n                            <td>{i.type}</td>\r\n                            <td>{i.amount}</td>\r\n                            <td>{i.currency}</td>\r\n                        </tr>\r\n                ))}\r\n            </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.array,\r\n}\r\n\r\nexport default TransactionHistory;","import \"./App.css\";\n\nimport user from \"./user.json\";\nimport UserProfile from \"./components/Profile/Profile\";\n\nimport statData from \"./statistical-data.json\";\nimport Statistics from \"./components/Statistics/Statistics\";\n\nimport FriendList from \"./components/FriendList/FriendList\";\nimport friendsData from \"./friends.json\";\n\nimport TransactionHistory from \"./components/TransactionsHistory/TransactionsHistory\";\nimport transactionsData from \"./transactions.json\";\n\nimport { div } from \"prelude-ls\";\n\nfunction App() {\n  return (\n    <div>\n      <UserProfile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n    />\n\n      <Statistics\n        title=\"Upload stats\"\n        stats={statData}\n      />\n      \n      <FriendList\n        friends={friendsData}\n      />\n\n      <TransactionHistory\n        items={transactionsData}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}